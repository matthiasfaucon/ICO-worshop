'use client';

import { useState } from 'react';
import { useAppSelector } from '@/lib/hooks';
import { FaBookDead } from "react-icons/fa";
import Link from 'next/link';
import RulesSlider from './RulesSlider';
import { MdOutlineFeedback } from "react-icons/md";

type HeaderProps = {
  pirateScore: number;
  marinScore: number;
};

export default function Header({ pirateScore, marinScore }: HeaderProps) {
  const [showRules, setShowRules] = useState(false);
  const gamePhase = useAppSelector((state) => state.game.gamePhase);

  return (
    <>
      <header className="bg-white px-7 py-4 shadow h-20 flex justify-between items-center w-full">


        <div className="flex items-center">
          {(gamePhase === 'SETUP' || gamePhase === 'CREATE_PLAYERS') && (
            <Link
              href={gamePhase === 'SETUP' ? '/' : '/onedevice'}
              className="p-2 rounded-full"
            >
              <svg
                width="16"
                height="16"
                viewBox="0 0 16 16"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M8.70711 0.292893C8.31658 -0.0976311 7.68342 -0.0976311 7.29289 0.292893L0.292893 7.29289C-0.0976315 7.68342 -0.0976315 8.31658 0.292893 8.70711L7.29289 15.7071C7.68342 16.0976 8.31658 16.0976 8.70711 15.7071C9.09763 15.3166 9.09763 14.6834 8.70711 14.2929L3.41421 9H15C15.5523 9 16 8.55229 16 8C16 7.44772 15.5523 7 15 7H3.41421L8.70711 1.70711C9.09763 1.31658 9.09763 0.683417 8.70711 0.292893Z"
                  fill="#3B4450"
                />
              </svg>
            </Link>
          )}
        </div>

        <div className='ml-4'>
        {gamePhase !== 'SETUP' &&
            gamePhase !== 'CREATE_PLAYERS' &&
            gamePhase !== 'REVEAL_ROLES' &&
            gamePhase !== 'GAME_OVER' && (
              <div className="flex items-center gap-2">
                <p className="flex items-center gap-1 text-sm font-bold text-gray-700">
                <svg width="17" height="18" viewBox="0 0 17 18" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path d="M15.0253 2.75033C14.5853 2.44691 14.8591 0.122275 12.4388 1.36045C10.8399 2.17774 11.4267 3.63614 10.9328 4.74707C10.8106 5.02113 8.77167 6.98362 8.52719 6.93957C7.93557 6.21526 6.61541 5.65245 6.20469 4.84495C5.5984 3.65082 6.08734 1.35066 4.07288 1.08638C2.41046 0.871049 2.72338 1.84495 2.12198 2.535C1.5988 3.14185 0.469335 2.82864 0.528009 4.37513C0.61113 6.47954 3.06565 6.67529 4.69873 6.33272L6.899 8.5399C6.899 8.75034 4.12177 11.168 3.80396 11.3344C2.96786 11.7797 0.20041 11.2463 0.0586155 13.4534C-0.0342846 14.8678 1.21742 14.8482 1.70637 15.3327C2.48379 16.1109 2.3909 17.7406 4.38581 16.5415C6.1069 15.504 5.26591 13.8009 5.80375 12.5823C5.97488 12.1957 8.30716 10.0913 8.69832 10.1598C9.05036 10.7422 11.0159 11.9901 11.1822 12.3327C11.7347 13.473 10.8301 15.4649 12.7908 16.5954C14.9715 17.8531 14.7759 15.8221 15.2698 15.3278C15.7147 14.8825 17.0202 15.3572 16.942 13.4436C16.8393 10.9477 14.1599 11.8678 13.1771 11.3344C12.8495 11.1582 10.3118 8.7797 10.3118 8.54479C10.8204 8.01624 11.764 6.63125 12.3556 6.39634C13.3775 5.99504 16.1988 7.25278 16.6388 4.56599C16.9273 2.81395 15.5338 3.1027 15.0204 2.74544L15.0253 2.75033Z" fill="#8E122A" stroke="white" stroke-width="0.0938502" stroke-miterlimit="10"/>
                </svg>
                <span>{pirateScore}</span>
                </p>
                {/* barre vertic */}
                <div className="h-6 w-px bg-gray-400"></div>
                <p className="flex items-center gap-1 text-sm font-bold text-gray-700">
                  <span>{marinScore}</span>
                  <svg width="14" height="16" viewBox="0 0 14 16" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <path d="M9.2239 3.47185C9.3263 3.378 9.3263 3.11813 9.4031 3.09286C9.77613 3.1073 10.5039 2.94849 10.5807 3.46824C10.61 3.68119 10.61 4.33088 10.5807 4.54022C10.4966 5.12133 9.74322 4.82897 9.34459 4.88311C9.35921 4.71708 9.23487 4.50052 9.06299 4.46082C8.88013 4.42111 8.09018 4.43555 7.92561 4.51135C7.43189 4.73874 7.51235 5.31985 7.51966 5.76741C7.53795 6.75638 7.60378 7.75979 7.63303 8.75237C7.66595 9.8821 7.60743 11.1346 7.70252 12.2462C7.72446 12.5133 7.81223 12.7335 8.01338 12.9104C8.43029 13.2785 8.8143 13.145 9.28241 12.9717C10.215 12.6325 11.0488 12.0261 11.6779 11.2717C11.7144 11.1851 11.3999 11.214 11.367 11.2176C11.1878 11.232 10.7124 11.4558 10.8587 11.1129L12.6616 8.71988C12.7092 8.67296 12.7494 8.60438 12.8226 8.59356C12.8957 8.58273 12.9067 8.77402 12.914 8.82817C13.0018 9.65832 13.0895 10.5895 13.1334 11.4197C13.1407 11.5821 13.1298 11.7445 13.1334 11.907C13.0164 12.0189 12.5958 11.4161 12.4056 11.4738C12.0399 13.0114 10.6429 14.1953 9.18001 14.7115C8.60584 14.9172 8.15966 14.928 7.66595 15.3395C7.42092 15.5452 7.2088 15.8592 6.92354 16C6.5688 15.7329 6.27622 15.3323 5.88856 15.1121C5.50091 14.8919 5.0145 14.8233 4.59393 14.6645C3.15301 14.1195 1.85105 12.9898 1.46705 11.4702C1.40488 11.4161 1.05745 11.7157 0.99162 11.7734C0.911162 11.842 0.925793 11.9828 0.753906 11.8673L0.998936 8.65131L1.02819 8.60799L1.13425 8.59717L3.05792 11.1815C3.12009 11.4125 2.69952 11.2356 2.57517 11.2212C2.45083 11.2067 2.32283 11.2212 2.19849 11.2176C2.18386 11.2789 2.22408 11.2898 2.25334 11.3259C2.7946 12.0225 3.76375 12.6685 4.59393 12.9717C4.92308 13.0908 5.19736 13.2063 5.54479 13.0981C5.89222 12.9898 6.13725 12.6613 6.17017 12.3148C6.33108 10.7303 6.15554 9.01224 6.31645 7.42412C6.22502 6.66254 6.4664 5.72049 6.34206 4.98418C6.29817 4.73152 6.00559 4.48247 5.74959 4.4536C5.58868 4.43555 4.9121 4.43194 4.78044 4.46804C4.5537 4.53661 4.53176 4.88312 4.50616 4.88672C4.12581 4.83258 3.37975 5.11051 3.28832 4.54022C3.25906 4.34532 3.26272 3.56569 3.32123 3.38883C3.46386 2.93766 4.1441 3.12535 4.50616 3.08204C4.53541 3.08564 4.51713 3.47907 4.8097 3.54404C4.97062 3.58013 5.63988 3.57291 5.82274 3.55125C6.11531 3.51877 6.38594 3.24085 6.42251 2.95571C6.47737 2.50453 6.11531 2.49371 5.87759 2.20135C5.31439 1.50474 5.57405 0.403876 6.43348 0.0898596C7.72081 -0.37936 8.83259 1.08966 8.02801 2.16525C7.87441 2.37099 7.49772 2.52258 7.45383 2.74997C7.38435 3.08565 7.6696 3.49711 8.01338 3.54765C8.21086 3.57652 8.79235 3.57291 8.99716 3.54765C9.06298 3.54043 9.17635 3.50794 9.2239 3.46463V3.47185ZM6.81749 0.649314C5.93611 0.79008 6.07874 2.20496 7.09178 2.03531C7.97315 1.88733 7.75372 0.50133 6.81749 0.649314Z" fill="#093074"/>
                  <path d="M6.81719 0.64927C7.75342 0.501285 7.97285 1.88729 7.09148 2.03527C6.07844 2.20491 5.93581 0.790036 6.81719 0.64927Z" fill="#093074"/>
                  </svg>
                </p>
              </div>
            )}
        </div>

        <div className="flex items-center gap-9">
          {/* Score Display */}


          {/* Bouton pour afficher RulesSlider */}
          <button
            className="rounded-full"
            onClick={() => setShowRules(true)}
          >
            <FaBookDead className="text-xl text-black" />
          </button>

          {/* Bouton Feedback conditionnel */}
          {(gamePhase === 'SETUP' || gamePhase === 'GAME_OVER') && (
            <Link href="/feedback">
              <MdOutlineFeedback className="text-xl text-black" />
            </Link>
          )}
        </div>
      </header>

      {/* Affichage conditionnel de RulesSlider */}
      {showRules && <RulesSlider onClose={() => setShowRules(false)} />}
    </>
  );
}
